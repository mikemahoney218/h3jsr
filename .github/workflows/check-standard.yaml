on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: '3.6'}
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: '3.6', args: '--install-args=\"--configure-args=--with-proj-lib=/usr/local/lib/\"", "--ignore-vignettes', build_args: "--no-build-vignettes"}
          - {os: macOS-latest, r: 'release', args: '--install-args=\"--configure-args=--with-proj-lib=/usr/local/lib/\"", "--ignore-vignettes', build_args: "--no-build-vignettes"}
          - {os: ubuntu-16.04, r: '3.6', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-latest, r: 'release', rspm: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Brew and macOS config
        if: runner.os == 'macOS'
        run: |
          brew install pkg-config
          brew install udunits
          brew install gdal
          brew install v8
          cat <<EOT >> .Renviron
          PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/
          PROJ_LIB=/usr/local/opt/proj/share/proj/
          # for installing XML package from source
          XML_CONFIG=/usr/local/opt/libxml2/bin/xml2-config
          EOT
          cat <<EOT >> .Rprofile
          r <- getOption("repos")
          r["CRAN"] <- "https://cran.rstudio.com"
          r["rccp_drat"] <- "https://RcppCore.github.io/drat"
          config_args <- c("sf" = "--with-proj-lib=/usr/local/lib/", "rgdal" = "--with-proj-lib=/usr/local/lib/ --with-proj-include=/usr/local/include/")
          options(configure.args = config_args,
                  install.packages.compile.from.source = "yes",
                  repos = r)
          EOT

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          # install spatial dependencies and v8 modern
          sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable --yes
          sudo add-apt-repository ppa:cran/v8
          sudo apt-get --yes --force-yes update -qq
          sudo apt-get install -y libudunits2-dev libproj-dev libgeos++-dev libgdal-dev libnode-dev

      - name: Install dependencies
        run: |
          # bugfix for tidyr on Win (pkg install order issues?)
          remotes::install_cran(c('ps', 'pillar', 'pkgbuild'))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          library(V8) # report version
        shell: Rscript {0}
        
      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
